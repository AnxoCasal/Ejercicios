<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="play_pause.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAYAAADFeBvrAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPySURBVGhD3Zo7
        L3xBGMY3FBQuLRISfAa161dApSKhc0vUgg+hJAoqEjQuIaLWakjEpUYh0ZD555n/OzLnnXfPnjkze3az
        v+SVzVzeeR57ds7MOVNSEfn4+FAHBwdqaWlJTUxMqMHBQdXe3q6am5t14DPKUIc2aIs+MQk29Pb2phYW
        FlSpVAoK5ECuUHIbur6+Vn19faK4kEBO5M6Lt6GXlxfV3d0tiokZGANj+eJlaG5uThycB8RMT0+rzc1N
        tbOzo46OjnTgM8pQl/WfgjF9yGTo9/dXtba2igOaGBsbU6enp9QjO+iDvlJOExgbGrJQ0dDj46M4iInl
        5WVqGQ5ySWOYgJZKpBq6u7sTEyNGRkaoVXxGR0fFMRHQlEZZQw8PD2JCxPn5ObWqHhcXF+LYCGgrh2gI
        16uUCFE0kgZEud+UqLClpcVJ0NHRQbXFg7G5HmiUcAyVm5prjaRJmtITSnEjkzrWC5I2fvNNqJVudkVM
        AFmBFq6vq6uLav/zZwjrJ964mlNzXqCJ67y6uqJay1Bvb6/TsF7hOqHdoFW/vr46jWKuAGKDvRTXCw9A
        G5qfn3cahGDfx87Ozqg0LrZWBDzocqkSi8UQcE3b+SYnJ6kmHtKCFpSwBeYVJycnujIvt7e3Tk5swT8/
        P6lFOMfHx84Y2sv+/r5TEYpkyMT29ja1Cofn1l74Dwz3olDSDCGGhoaoZRi4B9l5tZfx8fFEIXaToVQy
        ZOL+/p565GNqaiqRT3sZGBhIFG5sbFDz/GQ1hFhbW6Ne/kCrnUt7wbMyuxD7/lB8DCF6enqopx/QaufR
        XpqamhKFeJgRiq8hE74cHh4m+msvDWeora0tUViLSw5Pdb6+vqh3dvglp73wSQHPzULxMTQzM0O9/BEn
        hVpO2zc3N9QjH9Bq59NeFhcXE4V5ZxybSob6+/upZRh8Q6q9FL30WV9fp1bh8Nzay/v7u1OR55GuTTlD
        T09P1CIcLKB5fu0FlbwC12IIfPswPDxMNfHgv30E0H9jb/C+v7//8uzt7VFpXGytiMQGT9qCr66u6gb1
        yMrKiqM3sQUHDfWQBPDrHhG6Fa8G0tZbfIwF+IYJcXl5SbW1B1q4vrIPGsHz87PTAVEvSNqg2cZROzs7
        K3asNZImaOWISqXXKZ2dnVRbPBib68EKXUI09PPz4yQwUTSSBoTXCy+Q9kqyiIlCmgBMeL+SNKS9NK7m
        lC5NzSZyvzQ2pH1TCNy1YyGtAOxI+2YMmX4UuF4rHbzAYjHvwQtpoWlH1IMXNlmPxmCTKB2N2d3dVVtb
        W7oObaS+PKpyNMYG7zSlFUXswG606oeXbBrmeBmnYQ4AStT+iKZS/wB8Q9iVJuQO/wAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>